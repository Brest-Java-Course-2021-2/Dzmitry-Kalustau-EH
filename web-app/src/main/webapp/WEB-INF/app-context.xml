<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Use spring servlet for all requests, including static resources -->
    <mvc:default-servlet-handler/>

    <!-- Use @MVC annotations -->
    <mvc:annotation-driven/>

    <!-- Component scan for @Controller, @Service... annotations -->
    <context:component-scan base-package="com.epam.brest*"/>

<!--    <import resource="classpath*:test-db.xml"/>-->

<!--    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
<!--        <constructor-arg ref="dataSource"/>-->
<!--    </bean>-->

<!--        <bean id="expenseDao" class="com.epam.brest.>-->
<!--            <constructor-arg ref="namedParameterJdbcTemplate"/>-->
<!--        </bean>-->

<!--        <bean id="expenseService" class="com.epam.brest.service.impl.ExpenseServiceImpl">-->
<!--            <constructor-arg name="expenseDao" ref="expenseDao"/>-->
<!--        </bean>-->

<!--    <bean id="calculateSumDtoDao" class="com.epam.brest.dao.dto.CalculateSumDtoDaoJdbc">-->
<!--        <constructor-arg ref="namedParameterJdbcTemplate"/>-->
<!--    </bean>-->

<!--    <bean id="calculateSumDtoService" class="com.epam.brest.service.impl.dto.CalculateSumDtoServiceImpl">-->
<!--        <constructor-arg name="calculateSumDtoDao" ref="calculateSumDtoDao"/>-->
<!--    </bean>-->

<!--    <bean id="categoryDao" class="com.epam.brest.dao.CategoryDaoJDBCImpl">-->
<!--        <constructor-arg ref="namedParameterJdbcTemplate"/>-->
<!--    </bean>-->

<!--    <bean id="categoryService" class="com.epam.brest.service.impl.CategoryServiceImpl">-->
<!--        <constructor-arg name="categoryDao" ref="categoryDao"/>-->
<!--    </bean>-->

    <bean id="categoryService" class="com.epam.brest.service.rest.CategoriesServiceRest">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.categories}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <bean id="expenseService" class="com.epam.brest.service.rest.ExpensesServiceRest">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.expenses}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <bean id="calculateSumDtoService" class="com.epam.brest.service.rest.CalculateSumDtoServiceRest">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.calculateSumDto}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <!--                <value>classpath*:test-db.properties</value>-->
                <!--                <value>classpath*:sql-department.properties</value>-->
            </list>
        </property>
    </bean>


    <!-- Thymeleaf Template Resolver -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <!-- Template cache is true by default. Set to false if you want             -->
        <!-- templates to be automatically updated when modified.                    -->
        <property name="cacheable" value="false" />
    </bean>

    <!-- Thymeleaf Template Engine (Spring5-specific version) -->
    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolvers">
            <set>
                <ref bean="templateResolver" />
            </set>
        </property>
    </bean>

    <!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver interface -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:basename="/WEB-INF/messages">
    </bean>

</beans>
